Feature: Test WP-CLI Features with Wordfence API.

  Background:
    Given a WP install

  Scenario: WP-CLI loads for your tests
    When I run `wp eval 'echo "Hello world.";'`
    Then STDOUT should contain:
      """
      Hello world.
      """
  
  Scenario: Check core status (wp vuln core-status)
    When I run `wp vuln core-status`
    Then STDOUT should be a table containing rows:
      | name | installed version | status | introduced in | fix |

  Scenario: Check uninstalled vulnerable plugins (wp vuln plugin-check)
    When I run `wp vuln plugin-check wppizza wordpress-seo`
    Then STDOUT should be a table containing rows:
      | name          | installed version | status                                                      | fix                |
      | wppizza       | 0                 | PrettyPhoto Library (Multiple Plugins and Themes) <= 3.1.4 - DOM Cross-Site Scripting | Fixed in 2.11.8.18 |
      | wordpress-seo | 0                 | Yoast SEO <= 3.4.0 - Authenticated Stored Cross-Site Scripting | Fixed in 3.4.1 |


  Scenario: Get plugin status (wp vuln plugin-status)
    When I run `wp plugin uninstall akismet hello`
    Then STDOUT should not be empty

    When I run `wp vuln plugin-status`
    Then STDOUT should be a table containing rows:
      | name    | installed version | status                                                  | introduced in | fix            |
      | no-mail |                 | No vulnerabilities reported for this version of no-mail | n/a           | n/a            |


  Scenario: Show vulnerable plugin (wp vuln plugin-status)
    When I run `wp plugin uninstall akismet hello`
    Then STDOUT should not be empty

    When I run `wp plugin install restricted-site-access --version=7.3.2 --force`
    Then STDOUT should not be empty

    When I run `wp vuln plugin-status --no-color`
    Then STDOUT should be a table containing rows:
      | name                   | installed version | status                                                                                         | introduced in | fix            |
      | restricted-site-access | 7.3.2             | loader-utils (JS package) < 3.2.1 - Regular Expression Denial of Service | n/a       | Fixed in 7.3.5 |

    When I run `wp vuln plugin-status --porcelain`
    Then STDOUT should be:
      """
      restricted-site-access
      """

  Scenario: Should not show vulnerable plugin on fixed version (wp vuln plugin-status)
    When I run `wp plugin uninstall akismet hello`
    Then STDOUT should not be empty

    When I run `wp plugin install restricted-site-access --version=7.3.5 --force`
    Then STDOUT should not be empty

    When I run `wp vuln plugin-status --no-color`
    Then STDOUT should be a table containing rows:
      | name                   | installed version | status                                                                 | introduced in | fix |
      | restricted-site-access | 7.3.5             | No vulnerabilities reported for this version of restricted-site-access | n/a           | n/a |

    When I run `wp vuln plugin-status --porcelain`
    Then STDOUT should be empty

  Scenario: Check uninstalled vulnerable themes (wp vuln theme-check)
    When I run `wp vuln theme-check twentyfifteen --version=1.1`
    Then STDOUT should be a table containing rows:
      | name          | installed version | status                                                       | fix          | 
      | twentyfifteen | 1.1               | Twenty Fifteen Theme <= 1.1 & WordPress Core < 4.2.2 - Cross-Site Scripting via example.html | Fixed in 1.2 |

  Scenario: Get theme status (wp vuln theme-status)
    When I run `wp vuln theme-status`
    Then STDOUT should be a table containing rows:
      | name | installed version | status | introduced in | fix |

  Scenario: Show vulnerable theme (wp vuln theme-status)
    When I run `wp theme install twentyfifteen --version=1.1 --force`
    Then STDOUT should not be empty

    When I run `wp vuln theme-status --no-color`
    Then STDOUT should be a table containing rows:
      | name          | installed version | status                                                       | introduced in | fix          | 
      | twentyfifteen | 1.1               | Twenty Fifteen Theme <= 1.1 & WordPress Core < 4.2.2 - Cross-Site Scripting via example.html | n/a    | Fixed in 1.2 |

    When I run `wp vuln theme-status --porcelain`
    Then STDOUT should be:
      """
      twentyfifteen
      """
    
  Scenario: Should not show vulnerable theme on fixed version (wp vuln theme-status)
    When I run `wp theme install twentyfifteen --version=1.2 --force`
    Then STDOUT should not be empty

    When I run `wp vuln theme-status --no-color`
    Then STDOUT should be a table containing rows:
      | name          | installed version | status                                                        | introduced in | fix  | 
      | twentyfifteen | 1.2               | No vulnerabilities reported for this version of twentyfifteen | n/a           | n/a  |

    When I run `wp vuln theme-status --porcelain`
    Then STDOUT should be empty
