Feature: Test WP-CLI Features with Patchstack API.

  Background:
    Given a WP install

  Scenario: WP-CLI loads for your tests
    When I run `wp eval 'echo "Hello world.";'`
    Then STDOUT should contain:
      """
      Hello world.
      """
  
  Scenario: Check core status (wp vuln core-status)
    When I run `wp vuln core-status`
    Then STDOUT should end with a table containing rows:
      | name | installed version | status | introduced in | fixed in | severity |

  Scenario: Check uninstalled vulnerable plugins (wp vuln plugin-check)
    When I run `wp vuln plugin-check wppizza wordpress-seo`
    Then STDOUT should end with a table containing rows:
      | name          | installed version | status                                                      | fixed in                | severity      |
      | wppizza       | 0                 | WordPress WPPizza Plugin <= 2.11.8.0 - Cross Site Scripting | 2.11.8.18 | n/a           |
      | wordpress-seo | 0                 | WordPress SEO by Yoast Plugin 1.7.3.3 - Blind SQL Injection | 1.7.3.4 | n/a           |


  Scenario: Get plugin status (wp vuln plugin-status)
    When I run `wp plugin uninstall akismet hello`
    Then STDOUT should not be empty

    When I run `wp vuln plugin-status`
    Then STDOUT should end with a table containing rows:
      | name    | installed version | status                                                  | introduced in | fixed in            | severity |
      | no-mail | 0                 | No vulnerabilities reported for this version of no-mail | n/a           | n/a            | n/a           |


  Scenario: Show vulnerable plugin (wp vuln plugin-status)
    When I run `wp plugin uninstall akismet hello`
    Then STDOUT should not be empty

    When I run `wp plugin install restricted-site-access --version=7.3.1 --force`
    Then STDOUT should not be empty

    When I run `wp vuln plugin-status --no-color`
    Then STDOUT should end with a table containing rows:
      | name                   | installed version | status                                                                                         | introduced in | fixed in            | severity      |
      | restricted-site-access | 7.3.1             | WordPress Restricted Site Access plugin <= 7.3.1 - Access Bypass via IP Spoofing vulnerability | <= 7.3.1       | 7.3.2 | Medium 5.3/10 |

    When I run `wp vuln plugin-status --porcelain`
    Then STDOUT should be:
      """
      restricted-site-access
      """

  Scenario: Should not show vulnerable plugin on fixed version (wp vuln plugin-status)
    When I run `wp plugin uninstall akismet hello`
    Then STDOUT should not be empty

    When I run `wp plugin install restricted-site-access --version=7.3.2 --force`
    Then STDOUT should not be empty

    When I run `wp vuln plugin-status --no-color`
    Then STDOUT should end with a table containing rows:
      | name                   | installed version | status                                                                 | introduced in | fixed in | severity |
      | restricted-site-access | 7.3.2             | No vulnerabilities reported for this version of restricted-site-access | n/a           | n/a | n/a      |

    When I run `wp vuln plugin-status --porcelain`
    Then STDOUT should be empty

  Scenario: Check uninstalled vulnerable themes (wp vuln theme-check)
    When I run `wp vuln theme-check twentyfifteen --version=1.1`
    Then STDOUT should end with a table containing rows:
      | name          | installed version | status                                                       | fixed in          | severity |
      | twentyfifteen | 1.1               | WordPress Twenty Fifteen Theme <= 1.1 - Cross Site Scripting | 1.2 | n/a      |

  Scenario: Get theme status (wp vuln theme-status)
    When I run `wp vuln theme-status`
    Then STDOUT should end with a table containing rows:
      | name | installed version | status | introduced in | fixed in | severity |

  Scenario: Show vulnerable theme (wp vuln theme-status)
    When I run `wp theme install twentyfifteen --version=1.1 --force`
    Then STDOUT should not be empty

    When I run `wp vuln theme-status --no-color`
    Then STDOUT should end with a table containing rows:
      | name          | installed version | status                                                       | introduced in | fixed in          | severity |
      | twentyfifteen | 1.1               | WordPress Twenty Fifteen Theme <= 1.1 - Cross Site Scripting | <= 1.1         | 1.2 | n/a      |

    When I run `wp vuln theme-status --porcelain`
    Then STDOUT should be:
      """
      twentyfifteen
      """
    
  Scenario: Should not show vulnerable theme on fixed version (wp vuln theme-status)
    When I run `wp theme install twentyfifteen --version=1.2 --force`
    Then STDOUT should not be empty

    When I run `wp vuln theme-status --no-color`
    Then STDOUT should end with a table containing rows:
      | name          | installed version | status                                                        | introduced in | fixed in  | severity |
      | twentyfifteen | 1.2               | No vulnerabilities reported for this version of twentyfifteen | n/a           | n/a  | n/a      |

    When I run `wp vuln theme-status --porcelain`
    Then STDOUT should be empty

  Scenario: Should show reference information on request (wp vuln core-status --reference)
    When I run `wp vuln core-status --reference`
    Then STDOUT should end with a table containing rows:
      | name | installed version | status | introduced in | fixed in | reference |
